package com.retailsbs.logistikapp.financial.dto;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class OrderDetailExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_order_detail
     *
     * @abatorgenerated Tue Oct 03 16:24:25 CDT 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_order_detail
     *
     * @abatorgenerated Tue Oct 03 16:24:25 CDT 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order_detail
     *
     * @abatorgenerated Tue Oct 03 16:24:25 CDT 2017
     */
    public OrderDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order_detail
     *
     * @abatorgenerated Tue Oct 03 16:24:25 CDT 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order_detail
     *
     * @abatorgenerated Tue Oct 03 16:24:25 CDT 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order_detail
     *
     * @abatorgenerated Tue Oct 03 16:24:25 CDT 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order_detail
     *
     * @abatorgenerated Tue Oct 03 16:24:25 CDT 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order_detail
     *
     * @abatorgenerated Tue Oct 03 16:24:25 CDT 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order_detail
     *
     * @abatorgenerated Tue Oct 03 16:24:25 CDT 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order_detail
     *
     * @abatorgenerated Tue Oct 03 16:24:25 CDT 2017
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table lgk_order_detail
     *
     * @abatorgenerated Tue Oct 03 16:24:25 CDT 2017
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andId_order_detailIsNull() {
            addCriterion("id_order_detail is null");
            return this;
        }

        public Criteria andId_order_detailIsNotNull() {
            addCriterion("id_order_detail is not null");
            return this;
        }

        public Criteria andId_order_detailEqualTo(Long value) {
            addCriterion("id_order_detail =", value, "id_order_detail");
            return this;
        }

        public Criteria andId_order_detailNotEqualTo(Long value) {
            addCriterion("id_order_detail <>", value, "id_order_detail");
            return this;
        }

        public Criteria andId_order_detailGreaterThan(Long value) {
            addCriterion("id_order_detail >", value, "id_order_detail");
            return this;
        }

        public Criteria andId_order_detailGreaterThanOrEqualTo(Long value) {
            addCriterion("id_order_detail >=", value, "id_order_detail");
            return this;
        }

        public Criteria andId_order_detailLessThan(Long value) {
            addCriterion("id_order_detail <", value, "id_order_detail");
            return this;
        }

        public Criteria andId_order_detailLessThanOrEqualTo(Long value) {
            addCriterion("id_order_detail <=", value, "id_order_detail");
            return this;
        }

        public Criteria andId_order_detailIn(List<Long> values) {
            addCriterion("id_order_detail in", values, "id_order_detail");
            return this;
        }

        public Criteria andId_order_detailNotIn(List<Long> values) {
            addCriterion("id_order_detail not in", values, "id_order_detail");
            return this;
        }

        public Criteria andId_order_detailBetween(Long value1, Long value2) {
            addCriterion("id_order_detail between", value1, value2, "id_order_detail");
            return this;
        }

        public Criteria andId_order_detailNotBetween(Long value1, Long value2) {
            addCriterion("id_order_detail not between", value1, value2, "id_order_detail");
            return this;
        }

        public Criteria andId_orderIsNull() {
            addCriterion("id_order is null");
            return this;
        }

        public Criteria andId_orderIsNotNull() {
            addCriterion("id_order is not null");
            return this;
        }

        public Criteria andId_orderEqualTo(Long value) {
            addCriterion("id_order =", value, "id_order");
            return this;
        }

        public Criteria andId_orderNotEqualTo(Long value) {
            addCriterion("id_order <>", value, "id_order");
            return this;
        }

        public Criteria andId_orderGreaterThan(Long value) {
            addCriterion("id_order >", value, "id_order");
            return this;
        }

        public Criteria andId_orderGreaterThanOrEqualTo(Long value) {
            addCriterion("id_order >=", value, "id_order");
            return this;
        }

        public Criteria andId_orderLessThan(Long value) {
            addCriterion("id_order <", value, "id_order");
            return this;
        }

        public Criteria andId_orderLessThanOrEqualTo(Long value) {
            addCriterion("id_order <=", value, "id_order");
            return this;
        }

        public Criteria andId_orderIn(List<Long> values) {
            addCriterion("id_order in", values, "id_order");
            return this;
        }

        public Criteria andId_orderNotIn(List<Long> values) {
            addCriterion("id_order not in", values, "id_order");
            return this;
        }

        public Criteria andId_orderBetween(Long value1, Long value2) {
            addCriterion("id_order between", value1, value2, "id_order");
            return this;
        }

        public Criteria andId_orderNotBetween(Long value1, Long value2) {
            addCriterion("id_order not between", value1, value2, "id_order");
            return this;
        }

        public Criteria andId_productIsNull() {
            addCriterion("id_product is null");
            return this;
        }

        public Criteria andId_productIsNotNull() {
            addCriterion("id_product is not null");
            return this;
        }

        public Criteria andId_productEqualTo(Long value) {
            addCriterion("id_product =", value, "id_product");
            return this;
        }

        public Criteria andId_productNotEqualTo(Long value) {
            addCriterion("id_product <>", value, "id_product");
            return this;
        }

        public Criteria andId_productGreaterThan(Long value) {
            addCriterion("id_product >", value, "id_product");
            return this;
        }

        public Criteria andId_productGreaterThanOrEqualTo(Long value) {
            addCriterion("id_product >=", value, "id_product");
            return this;
        }

        public Criteria andId_productLessThan(Long value) {
            addCriterion("id_product <", value, "id_product");
            return this;
        }

        public Criteria andId_productLessThanOrEqualTo(Long value) {
            addCriterion("id_product <=", value, "id_product");
            return this;
        }

        public Criteria andId_productIn(List<Long> values) {
            addCriterion("id_product in", values, "id_product");
            return this;
        }

        public Criteria andId_productNotIn(List<Long> values) {
            addCriterion("id_product not in", values, "id_product");
            return this;
        }

        public Criteria andId_productBetween(Long value1, Long value2) {
            addCriterion("id_product between", value1, value2, "id_product");
            return this;
        }

        public Criteria andId_productNotBetween(Long value1, Long value2) {
            addCriterion("id_product not between", value1, value2, "id_product");
            return this;
        }

        public Criteria andPrice_sugIsNull() {
            addCriterion("price_sug is null");
            return this;
        }

        public Criteria andPrice_sugIsNotNull() {
            addCriterion("price_sug is not null");
            return this;
        }

        public Criteria andPrice_sugEqualTo(Double value) {
            addCriterion("price_sug =", value, "price_sug");
            return this;
        }

        public Criteria andPrice_sugNotEqualTo(Double value) {
            addCriterion("price_sug <>", value, "price_sug");
            return this;
        }

        public Criteria andPrice_sugGreaterThan(Double value) {
            addCriterion("price_sug >", value, "price_sug");
            return this;
        }

        public Criteria andPrice_sugGreaterThanOrEqualTo(Double value) {
            addCriterion("price_sug >=", value, "price_sug");
            return this;
        }

        public Criteria andPrice_sugLessThan(Double value) {
            addCriterion("price_sug <", value, "price_sug");
            return this;
        }

        public Criteria andPrice_sugLessThanOrEqualTo(Double value) {
            addCriterion("price_sug <=", value, "price_sug");
            return this;
        }

        public Criteria andPrice_sugIn(List<Double> values) {
            addCriterion("price_sug in", values, "price_sug");
            return this;
        }

        public Criteria andPrice_sugNotIn(List<Double> values) {
            addCriterion("price_sug not in", values, "price_sug");
            return this;
        }

        public Criteria andPrice_sugBetween(Double value1, Double value2) {
            addCriterion("price_sug between", value1, value2, "price_sug");
            return this;
        }

        public Criteria andPrice_sugNotBetween(Double value1, Double value2) {
            addCriterion("price_sug not between", value1, value2, "price_sug");
            return this;
        }

        public Criteria andQuantityIsNull() {
            addCriterion("quantity is null");
            return this;
        }

        public Criteria andQuantityIsNotNull() {
            addCriterion("quantity is not null");
            return this;
        }

        public Criteria andQuantityEqualTo(Integer value) {
            addCriterion("quantity =", value, "quantity");
            return this;
        }

        public Criteria andQuantityNotEqualTo(Integer value) {
            addCriterion("quantity <>", value, "quantity");
            return this;
        }

        public Criteria andQuantityGreaterThan(Integer value) {
            addCriterion("quantity >", value, "quantity");
            return this;
        }

        public Criteria andQuantityGreaterThanOrEqualTo(Integer value) {
            addCriterion("quantity >=", value, "quantity");
            return this;
        }

        public Criteria andQuantityLessThan(Integer value) {
            addCriterion("quantity <", value, "quantity");
            return this;
        }

        public Criteria andQuantityLessThanOrEqualTo(Integer value) {
            addCriterion("quantity <=", value, "quantity");
            return this;
        }

        public Criteria andQuantityIn(List<Integer> values) {
            addCriterion("quantity in", values, "quantity");
            return this;
        }

        public Criteria andQuantityNotIn(List<Integer> values) {
            addCriterion("quantity not in", values, "quantity");
            return this;
        }

        public Criteria andQuantityBetween(Integer value1, Integer value2) {
            addCriterion("quantity between", value1, value2, "quantity");
            return this;
        }

        public Criteria andQuantityNotBetween(Integer value1, Integer value2) {
            addCriterion("quantity not between", value1, value2, "quantity");
            return this;
        }

        public Criteria andTypetrxIsNull() {
            addCriterion("typetrx is null");
            return this;
        }

        public Criteria andTypetrxIsNotNull() {
            addCriterion("typetrx is not null");
            return this;
        }

        public Criteria andTypetrxEqualTo(String value) {
            addCriterion("typetrx =", value, "typetrx");
            return this;
        }

        public Criteria andTypetrxNotEqualTo(String value) {
            addCriterion("typetrx <>", value, "typetrx");
            return this;
        }

        public Criteria andTypetrxGreaterThan(String value) {
            addCriterion("typetrx >", value, "typetrx");
            return this;
        }

        public Criteria andTypetrxGreaterThanOrEqualTo(String value) {
            addCriterion("typetrx >=", value, "typetrx");
            return this;
        }

        public Criteria andTypetrxLessThan(String value) {
            addCriterion("typetrx <", value, "typetrx");
            return this;
        }

        public Criteria andTypetrxLessThanOrEqualTo(String value) {
            addCriterion("typetrx <=", value, "typetrx");
            return this;
        }

        public Criteria andTypetrxLike(String value) {
            addCriterion("typetrx like", value, "typetrx");
            return this;
        }

        public Criteria andTypetrxNotLike(String value) {
            addCriterion("typetrx not like", value, "typetrx");
            return this;
        }

        public Criteria andTypetrxIn(List<String> values) {
            addCriterion("typetrx in", values, "typetrx");
            return this;
        }

        public Criteria andTypetrxNotIn(List<String> values) {
            addCriterion("typetrx not in", values, "typetrx");
            return this;
        }

        public Criteria andTypetrxBetween(String value1, String value2) {
            addCriterion("typetrx between", value1, value2, "typetrx");
            return this;
        }

        public Criteria andTypetrxNotBetween(String value1, String value2) {
            addCriterion("typetrx not between", value1, value2, "typetrx");
            return this;
        }

        public Criteria andCostIsNull() {
            addCriterion("cost is null");
            return this;
        }

        public Criteria andCostIsNotNull() {
            addCriterion("cost is not null");
            return this;
        }

        public Criteria andCostEqualTo(Double value) {
            addCriterion("cost =", value, "cost");
            return this;
        }

        public Criteria andCostNotEqualTo(Double value) {
            addCriterion("cost <>", value, "cost");
            return this;
        }

        public Criteria andCostGreaterThan(Double value) {
            addCriterion("cost >", value, "cost");
            return this;
        }

        public Criteria andCostGreaterThanOrEqualTo(Double value) {
            addCriterion("cost >=", value, "cost");
            return this;
        }

        public Criteria andCostLessThan(Double value) {
            addCriterion("cost <", value, "cost");
            return this;
        }

        public Criteria andCostLessThanOrEqualTo(Double value) {
            addCriterion("cost <=", value, "cost");
            return this;
        }

        public Criteria andCostIn(List<Double> values) {
            addCriterion("cost in", values, "cost");
            return this;
        }

        public Criteria andCostNotIn(List<Double> values) {
            addCriterion("cost not in", values, "cost");
            return this;
        }

        public Criteria andCostBetween(Double value1, Double value2) {
            addCriterion("cost between", value1, value2, "cost");
            return this;
        }

        public Criteria andCostNotBetween(Double value1, Double value2) {
            addCriterion("cost not between", value1, value2, "cost");
            return this;
        }

        public Criteria andPrice_saleIsNull() {
            addCriterion("price_sale is null");
            return this;
        }

        public Criteria andPrice_saleIsNotNull() {
            addCriterion("price_sale is not null");
            return this;
        }

        public Criteria andPrice_saleEqualTo(Double value) {
            addCriterion("price_sale =", value, "price_sale");
            return this;
        }

        public Criteria andPrice_saleNotEqualTo(Double value) {
            addCriterion("price_sale <>", value, "price_sale");
            return this;
        }

        public Criteria andPrice_saleGreaterThan(Double value) {
            addCriterion("price_sale >", value, "price_sale");
            return this;
        }

        public Criteria andPrice_saleGreaterThanOrEqualTo(Double value) {
            addCriterion("price_sale >=", value, "price_sale");
            return this;
        }

        public Criteria andPrice_saleLessThan(Double value) {
            addCriterion("price_sale <", value, "price_sale");
            return this;
        }

        public Criteria andPrice_saleLessThanOrEqualTo(Double value) {
            addCriterion("price_sale <=", value, "price_sale");
            return this;
        }

        public Criteria andPrice_saleIn(List<Double> values) {
            addCriterion("price_sale in", values, "price_sale");
            return this;
        }

        public Criteria andPrice_saleNotIn(List<Double> values) {
            addCriterion("price_sale not in", values, "price_sale");
            return this;
        }

        public Criteria andPrice_saleBetween(Double value1, Double value2) {
            addCriterion("price_sale between", value1, value2, "price_sale");
            return this;
        }

        public Criteria andPrice_saleNotBetween(Double value1, Double value2) {
            addCriterion("price_sale not between", value1, value2, "price_sale");
            return this;
        }

        public Criteria andProduct_typeIsNull() {
            addCriterion("product_type is null");
            return this;
        }

        public Criteria andProduct_typeIsNotNull() {
            addCriterion("product_type is not null");
            return this;
        }

        public Criteria andProduct_typeEqualTo(String value) {
            addCriterion("product_type =", value, "product_type");
            return this;
        }

        public Criteria andProduct_typeNotEqualTo(String value) {
            addCriterion("product_type <>", value, "product_type");
            return this;
        }

        public Criteria andProduct_typeGreaterThan(String value) {
            addCriterion("product_type >", value, "product_type");
            return this;
        }

        public Criteria andProduct_typeGreaterThanOrEqualTo(String value) {
            addCriterion("product_type >=", value, "product_type");
            return this;
        }

        public Criteria andProduct_typeLessThan(String value) {
            addCriterion("product_type <", value, "product_type");
            return this;
        }

        public Criteria andProduct_typeLessThanOrEqualTo(String value) {
            addCriterion("product_type <=", value, "product_type");
            return this;
        }

        public Criteria andProduct_typeLike(String value) {
            addCriterion("product_type like", value, "product_type");
            return this;
        }

        public Criteria andProduct_typeNotLike(String value) {
            addCriterion("product_type not like", value, "product_type");
            return this;
        }

        public Criteria andProduct_typeIn(List<String> values) {
            addCriterion("product_type in", values, "product_type");
            return this;
        }

        public Criteria andProduct_typeNotIn(List<String> values) {
            addCriterion("product_type not in", values, "product_type");
            return this;
        }

        public Criteria andProduct_typeBetween(String value1, String value2) {
            addCriterion("product_type between", value1, value2, "product_type");
            return this;
        }

        public Criteria andProduct_typeNotBetween(String value1, String value2) {
            addCriterion("product_type not between", value1, value2, "product_type");
            return this;
        }
    }
}