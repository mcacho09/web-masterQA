package com.retailsbs.logistikapp.financial.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

public class OrderExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_order
     *
     * @abatorgenerated Thu Aug 18 11:32:18 CDT 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_order
     *
     * @abatorgenerated Thu Aug 18 11:32:18 CDT 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order
     *
     * @abatorgenerated Thu Aug 18 11:32:18 CDT 2016
     */
    public OrderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order
     *
     * @abatorgenerated Thu Aug 18 11:32:18 CDT 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order
     *
     * @abatorgenerated Thu Aug 18 11:32:18 CDT 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order
     *
     * @abatorgenerated Thu Aug 18 11:32:18 CDT 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order
     *
     * @abatorgenerated Thu Aug 18 11:32:18 CDT 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order
     *
     * @abatorgenerated Thu Aug 18 11:32:18 CDT 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order
     *
     * @abatorgenerated Thu Aug 18 11:32:18 CDT 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_order
     *
     * @abatorgenerated Thu Aug 18 11:32:18 CDT 2016
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table lgk_order
     *
     * @abatorgenerated Thu Aug 18 11:32:18 CDT 2016
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andId_orderIsNull() {
            addCriterion("id_order is null");
            return this;
        }

        public Criteria andId_orderIsNotNull() {
            addCriterion("id_order is not null");
            return this;
        }

        public Criteria andId_orderEqualTo(Long value) {
            addCriterion("id_order =", value, "id_order");
            return this;
        }

        public Criteria andId_orderNotEqualTo(Long value) {
            addCriterion("id_order <>", value, "id_order");
            return this;
        }

        public Criteria andId_orderGreaterThan(Long value) {
            addCriterion("id_order >", value, "id_order");
            return this;
        }

        public Criteria andId_orderGreaterThanOrEqualTo(Long value) {
            addCriterion("id_order >=", value, "id_order");
            return this;
        }

        public Criteria andId_orderLessThan(Long value) {
            addCriterion("id_order <", value, "id_order");
            return this;
        }

        public Criteria andId_orderLessThanOrEqualTo(Long value) {
            addCriterion("id_order <=", value, "id_order");
            return this;
        }

        public Criteria andId_orderIn(List<Long> values) {
            addCriterion("id_order in", values, "id_order");
            return this;
        }

        public Criteria andId_orderNotIn(List<Long> values) {
            addCriterion("id_order not in", values, "id_order");
            return this;
        }

        public Criteria andId_orderBetween(Long value1, Long value2) {
            addCriterion("id_order between", value1, value2, "id_order");
            return this;
        }

        public Criteria andId_orderNotBetween(Long value1, Long value2) {
            addCriterion("id_order not between", value1, value2, "id_order");
            return this;
        }

        public Criteria andId_supplierIsNull() {
            addCriterion("id_supplier is null");
            return this;
        }

        public Criteria andId_supplierIsNotNull() {
            addCriterion("id_supplier is not null");
            return this;
        }

        public Criteria andId_supplierEqualTo(Long value) {
            addCriterion("id_supplier =", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierNotEqualTo(Long value) {
            addCriterion("id_supplier <>", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierGreaterThan(Long value) {
            addCriterion("id_supplier >", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierGreaterThanOrEqualTo(Long value) {
            addCriterion("id_supplier >=", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierLessThan(Long value) {
            addCriterion("id_supplier <", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierLessThanOrEqualTo(Long value) {
            addCriterion("id_supplier <=", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierIn(List<Long> values) {
            addCriterion("id_supplier in", values, "id_supplier");
            return this;
        }

        public Criteria andId_supplierNotIn(List<Long> values) {
            addCriterion("id_supplier not in", values, "id_supplier");
            return this;
        }

        public Criteria andId_supplierBetween(Long value1, Long value2) {
            addCriterion("id_supplier between", value1, value2, "id_supplier");
            return this;
        }

        public Criteria andId_supplierNotBetween(Long value1, Long value2) {
            addCriterion("id_supplier not between", value1, value2, "id_supplier");
            return this;
        }

        public Criteria andModifiedIsNull() {
            addCriterion("modified is null");
            return this;
        }

        public Criteria andModifiedIsNotNull() {
            addCriterion("modified is not null");
            return this;
        }

        public Criteria andModifiedEqualTo(Date value) {
            addCriterion("modified =", value, "modified");
            return this;
        }

        public Criteria andModifiedNotEqualTo(Date value) {
            addCriterion("modified <>", value, "modified");
            return this;
        }

        public Criteria andModifiedGreaterThan(Date value) {
            addCriterion("modified >", value, "modified");
            return this;
        }

        public Criteria andModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("modified >=", value, "modified");
            return this;
        }

        public Criteria andModifiedLessThan(Date value) {
            addCriterion("modified <", value, "modified");
            return this;
        }

        public Criteria andModifiedLessThanOrEqualTo(Date value) {
            addCriterion("modified <=", value, "modified");
            return this;
        }

        public Criteria andModifiedIn(List<Date> values) {
            addCriterion("modified in", values, "modified");
            return this;
        }

        public Criteria andModifiedNotIn(List<Date> values) {
            addCriterion("modified not in", values, "modified");
            return this;
        }

        public Criteria andModifiedBetween(Date value1, Date value2) {
            addCriterion("modified between", value1, value2, "modified");
            return this;
        }

        public Criteria andModifiedNotBetween(Date value1, Date value2) {
            addCriterion("modified not between", value1, value2, "modified");
            return this;
        }

        public Criteria andInvoiceIsNull() {
            addCriterion("invoice is null");
            return this;
        }

        public Criteria andInvoiceIsNotNull() {
            addCriterion("invoice is not null");
            return this;
        }

        public Criteria andInvoiceEqualTo(Date value) {
            addCriterion("invoice =", value, "invoice");
            return this;
        }

        public Criteria andInvoiceNotEqualTo(Date value) {
            addCriterion("invoice <>", value, "invoice");
            return this;
        }

        public Criteria andInvoiceGreaterThan(Date value) {
            addCriterion("invoice >", value, "invoice");
            return this;
        }

        public Criteria andInvoiceGreaterThanOrEqualTo(Date value) {
            addCriterion("invoice >=", value, "invoice");
            return this;
        }

        public Criteria andInvoiceLessThan(Date value) {
            addCriterion("invoice <", value, "invoice");
            return this;
        }

        public Criteria andInvoiceLessThanOrEqualTo(Date value) {
            addCriterion("invoice <=", value, "invoice");
            return this;
        }

        public Criteria andInvoiceIn(List<Date> values) {
            addCriterion("invoice in", values, "invoice");
            return this;
        }

        public Criteria andInvoiceNotIn(List<Date> values) {
            addCriterion("invoice not in", values, "invoice");
            return this;
        }

        public Criteria andInvoiceBetween(Date value1, Date value2) {
            addCriterion("invoice between", value1, value2, "invoice");
            return this;
        }

        public Criteria andInvoiceNotBetween(Date value1, Date value2) {
            addCriterion("invoice not between", value1, value2, "invoice");
            return this;
        }

        public Criteria andDeliveryIsNull() {
            addCriterion("delivery is null");
            return this;
        }

        public Criteria andDeliveryIsNotNull() {
            addCriterion("delivery is not null");
            return this;
        }

        public Criteria andDeliveryEqualTo(Date value) {
            addCriterionForJDBCDate("delivery =", value, "delivery");
            return this;
        }

        public Criteria andDeliveryNotEqualTo(Date value) {
            addCriterionForJDBCDate("delivery <>", value, "delivery");
            return this;
        }

        public Criteria andDeliveryGreaterThan(Date value) {
            addCriterionForJDBCDate("delivery >", value, "delivery");
            return this;
        }

        public Criteria andDeliveryGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("delivery >=", value, "delivery");
            return this;
        }

        public Criteria andDeliveryLessThan(Date value) {
            addCriterionForJDBCDate("delivery <", value, "delivery");
            return this;
        }

        public Criteria andDeliveryLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("delivery <=", value, "delivery");
            return this;
        }

        public Criteria andDeliveryIn(List<Date> values) {
            addCriterionForJDBCDate("delivery in", values, "delivery");
            return this;
        }

        public Criteria andDeliveryNotIn(List<Date> values) {
            addCriterionForJDBCDate("delivery not in", values, "delivery");
            return this;
        }

        public Criteria andDeliveryBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("delivery between", value1, value2, "delivery");
            return this;
        }

        public Criteria andDeliveryNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("delivery not between", value1, value2, "delivery");
            return this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return this;
        }

        public Criteria andId_retailIsNull() {
            addCriterion("id_retail is null");
            return this;
        }

        public Criteria andId_retailIsNotNull() {
            addCriterion("id_retail is not null");
            return this;
        }

        public Criteria andId_retailEqualTo(Long value) {
            addCriterion("id_retail =", value, "id_retail");
            return this;
        }

        public Criteria andId_retailNotEqualTo(Long value) {
            addCriterion("id_retail <>", value, "id_retail");
            return this;
        }

        public Criteria andId_retailGreaterThan(Long value) {
            addCriterion("id_retail >", value, "id_retail");
            return this;
        }

        public Criteria andId_retailGreaterThanOrEqualTo(Long value) {
            addCriterion("id_retail >=", value, "id_retail");
            return this;
        }

        public Criteria andId_retailLessThan(Long value) {
            addCriterion("id_retail <", value, "id_retail");
            return this;
        }

        public Criteria andId_retailLessThanOrEqualTo(Long value) {
            addCriterion("id_retail <=", value, "id_retail");
            return this;
        }

        public Criteria andId_retailIn(List<Long> values) {
            addCriterion("id_retail in", values, "id_retail");
            return this;
        }

        public Criteria andId_retailNotIn(List<Long> values) {
            addCriterion("id_retail not in", values, "id_retail");
            return this;
        }

        public Criteria andId_retailBetween(Long value1, Long value2) {
            addCriterion("id_retail between", value1, value2, "id_retail");
            return this;
        }

        public Criteria andId_retailNotBetween(Long value1, Long value2) {
            addCriterion("id_retail not between", value1, value2, "id_retail");
            return this;
        }

        public Criteria andId_storeIsNull() {
            addCriterion("id_store is null");
            return this;
        }

        public Criteria andId_storeIsNotNull() {
            addCriterion("id_store is not null");
            return this;
        }

        public Criteria andId_storeEqualTo(Long value) {
            addCriterion("id_store =", value, "id_store");
            return this;
        }

        public Criteria andId_storeNotEqualTo(Long value) {
            addCriterion("id_store <>", value, "id_store");
            return this;
        }

        public Criteria andId_storeGreaterThan(Long value) {
            addCriterion("id_store >", value, "id_store");
            return this;
        }

        public Criteria andId_storeGreaterThanOrEqualTo(Long value) {
            addCriterion("id_store >=", value, "id_store");
            return this;
        }

        public Criteria andId_storeLessThan(Long value) {
            addCriterion("id_store <", value, "id_store");
            return this;
        }

        public Criteria andId_storeLessThanOrEqualTo(Long value) {
            addCriterion("id_store <=", value, "id_store");
            return this;
        }

        public Criteria andId_storeIn(List<Long> values) {
            addCriterion("id_store in", values, "id_store");
            return this;
        }

        public Criteria andId_storeNotIn(List<Long> values) {
            addCriterion("id_store not in", values, "id_store");
            return this;
        }

        public Criteria andId_storeBetween(Long value1, Long value2) {
            addCriterion("id_store between", value1, value2, "id_store");
            return this;
        }

        public Criteria andId_storeNotBetween(Long value1, Long value2) {
            addCriterion("id_store not between", value1, value2, "id_store");
            return this;
        }

        public Criteria andId_userIsNull() {
            addCriterion("id_user is null");
            return this;
        }

        public Criteria andId_userIsNotNull() {
            addCriterion("id_user is not null");
            return this;
        }

        public Criteria andId_userEqualTo(Long value) {
            addCriterion("id_user =", value, "id_user");
            return this;
        }

        public Criteria andId_userNotEqualTo(Long value) {
            addCriterion("id_user <>", value, "id_user");
            return this;
        }

        public Criteria andId_userGreaterThan(Long value) {
            addCriterion("id_user >", value, "id_user");
            return this;
        }

        public Criteria andId_userGreaterThanOrEqualTo(Long value) {
            addCriterion("id_user >=", value, "id_user");
            return this;
        }

        public Criteria andId_userLessThan(Long value) {
            addCriterion("id_user <", value, "id_user");
            return this;
        }

        public Criteria andId_userLessThanOrEqualTo(Long value) {
            addCriterion("id_user <=", value, "id_user");
            return this;
        }

        public Criteria andId_userIn(List<Long> values) {
            addCriterion("id_user in", values, "id_user");
            return this;
        }

        public Criteria andId_userNotIn(List<Long> values) {
            addCriterion("id_user not in", values, "id_user");
            return this;
        }

        public Criteria andId_userBetween(Long value1, Long value2) {
            addCriterion("id_user between", value1, value2, "id_user");
            return this;
        }

        public Criteria andId_userNotBetween(Long value1, Long value2) {
            addCriterion("id_user not between", value1, value2, "id_user");
            return this;
        }
    }
}