package com.retailsbs.logistikapp.commercial.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RetailcatGoalExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_retailcat_goal
     *
     * @abatorgenerated Tue Mar 17 08:59:01 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_retailcat_goal
     *
     * @abatorgenerated Tue Mar 17 08:59:01 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_retailcat_goal
     *
     * @abatorgenerated Tue Mar 17 08:59:01 CST 2015
     */
    public RetailcatGoalExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_retailcat_goal
     *
     * @abatorgenerated Tue Mar 17 08:59:01 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_retailcat_goal
     *
     * @abatorgenerated Tue Mar 17 08:59:01 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_retailcat_goal
     *
     * @abatorgenerated Tue Mar 17 08:59:01 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_retailcat_goal
     *
     * @abatorgenerated Tue Mar 17 08:59:01 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_retailcat_goal
     *
     * @abatorgenerated Tue Mar 17 08:59:01 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_retailcat_goal
     *
     * @abatorgenerated Tue Mar 17 08:59:01 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_retailcat_goal
     *
     * @abatorgenerated Tue Mar 17 08:59:01 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table lgk_retailcat_goal
     *
     * @abatorgenerated Tue Mar 17 08:59:01 CST 2015
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andId_retailcat_goalIsNull() {
            addCriterion("id_retailcat_goal is null");
            return this;
        }

        public Criteria andId_retailcat_goalIsNotNull() {
            addCriterion("id_retailcat_goal is not null");
            return this;
        }

        public Criteria andId_retailcat_goalEqualTo(Long value) {
            addCriterion("id_retailcat_goal =", value, "id_retailcat_goal");
            return this;
        }

        public Criteria andId_retailcat_goalNotEqualTo(Long value) {
            addCriterion("id_retailcat_goal <>", value, "id_retailcat_goal");
            return this;
        }

        public Criteria andId_retailcat_goalGreaterThan(Long value) {
            addCriterion("id_retailcat_goal >", value, "id_retailcat_goal");
            return this;
        }

        public Criteria andId_retailcat_goalGreaterThanOrEqualTo(Long value) {
            addCriterion("id_retailcat_goal >=", value, "id_retailcat_goal");
            return this;
        }

        public Criteria andId_retailcat_goalLessThan(Long value) {
            addCriterion("id_retailcat_goal <", value, "id_retailcat_goal");
            return this;
        }

        public Criteria andId_retailcat_goalLessThanOrEqualTo(Long value) {
            addCriterion("id_retailcat_goal <=", value, "id_retailcat_goal");
            return this;
        }

        public Criteria andId_retailcat_goalIn(List<Long> values) {
            addCriterion("id_retailcat_goal in", values, "id_retailcat_goal");
            return this;
        }

        public Criteria andId_retailcat_goalNotIn(List<Long> values) {
            addCriterion("id_retailcat_goal not in", values, "id_retailcat_goal");
            return this;
        }

        public Criteria andId_retailcat_goalBetween(Long value1, Long value2) {
            addCriterion("id_retailcat_goal between", value1, value2, "id_retailcat_goal");
            return this;
        }

        public Criteria andId_retailcat_goalNotBetween(Long value1, Long value2) {
            addCriterion("id_retailcat_goal not between", value1, value2, "id_retailcat_goal");
            return this;
        }

        public Criteria andId_retail_categoryIsNull() {
            addCriterion("id_retail_category is null");
            return this;
        }

        public Criteria andId_retail_categoryIsNotNull() {
            addCriterion("id_retail_category is not null");
            return this;
        }

        public Criteria andId_retail_categoryEqualTo(Long value) {
            addCriterion("id_retail_category =", value, "id_retail_category");
            return this;
        }

        public Criteria andId_retail_categoryNotEqualTo(Long value) {
            addCriterion("id_retail_category <>", value, "id_retail_category");
            return this;
        }

        public Criteria andId_retail_categoryGreaterThan(Long value) {
            addCriterion("id_retail_category >", value, "id_retail_category");
            return this;
        }

        public Criteria andId_retail_categoryGreaterThanOrEqualTo(Long value) {
            addCriterion("id_retail_category >=", value, "id_retail_category");
            return this;
        }

        public Criteria andId_retail_categoryLessThan(Long value) {
            addCriterion("id_retail_category <", value, "id_retail_category");
            return this;
        }

        public Criteria andId_retail_categoryLessThanOrEqualTo(Long value) {
            addCriterion("id_retail_category <=", value, "id_retail_category");
            return this;
        }

        public Criteria andId_retail_categoryIn(List<Long> values) {
            addCriterion("id_retail_category in", values, "id_retail_category");
            return this;
        }

        public Criteria andId_retail_categoryNotIn(List<Long> values) {
            addCriterion("id_retail_category not in", values, "id_retail_category");
            return this;
        }

        public Criteria andId_retail_categoryBetween(Long value1, Long value2) {
            addCriterion("id_retail_category between", value1, value2, "id_retail_category");
            return this;
        }

        public Criteria andId_retail_categoryNotBetween(Long value1, Long value2) {
            addCriterion("id_retail_category not between", value1, value2, "id_retail_category");
            return this;
        }

        public Criteria andYearIsNull() {
            addCriterion("year is null");
            return this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("year is not null");
            return this;
        }

        public Criteria andYearEqualTo(Integer value) {
            addCriterion("year =", value, "year");
            return this;
        }

        public Criteria andYearNotEqualTo(Integer value) {
            addCriterion("year <>", value, "year");
            return this;
        }

        public Criteria andYearGreaterThan(Integer value) {
            addCriterion("year >", value, "year");
            return this;
        }

        public Criteria andYearGreaterThanOrEqualTo(Integer value) {
            addCriterion("year >=", value, "year");
            return this;
        }

        public Criteria andYearLessThan(Integer value) {
            addCriterion("year <", value, "year");
            return this;
        }

        public Criteria andYearLessThanOrEqualTo(Integer value) {
            addCriterion("year <=", value, "year");
            return this;
        }

        public Criteria andYearIn(List<Integer> values) {
            addCriterion("year in", values, "year");
            return this;
        }

        public Criteria andYearNotIn(List<Integer> values) {
            addCriterion("year not in", values, "year");
            return this;
        }

        public Criteria andYearBetween(Integer value1, Integer value2) {
            addCriterion("year between", value1, value2, "year");
            return this;
        }

        public Criteria andYearNotBetween(Integer value1, Integer value2) {
            addCriterion("year not between", value1, value2, "year");
            return this;
        }

        public Criteria andMonthIsNull() {
            addCriterion("month is null");
            return this;
        }

        public Criteria andMonthIsNotNull() {
            addCriterion("month is not null");
            return this;
        }

        public Criteria andMonthEqualTo(Integer value) {
            addCriterion("month =", value, "month");
            return this;
        }

        public Criteria andMonthNotEqualTo(Integer value) {
            addCriterion("month <>", value, "month");
            return this;
        }

        public Criteria andMonthGreaterThan(Integer value) {
            addCriterion("month >", value, "month");
            return this;
        }

        public Criteria andMonthGreaterThanOrEqualTo(Integer value) {
            addCriterion("month >=", value, "month");
            return this;
        }

        public Criteria andMonthLessThan(Integer value) {
            addCriterion("month <", value, "month");
            return this;
        }

        public Criteria andMonthLessThanOrEqualTo(Integer value) {
            addCriterion("month <=", value, "month");
            return this;
        }

        public Criteria andMonthIn(List<Integer> values) {
            addCriterion("month in", values, "month");
            return this;
        }

        public Criteria andMonthNotIn(List<Integer> values) {
            addCriterion("month not in", values, "month");
            return this;
        }

        public Criteria andMonthBetween(Integer value1, Integer value2) {
            addCriterion("month between", value1, value2, "month");
            return this;
        }

        public Criteria andMonthNotBetween(Integer value1, Integer value2) {
            addCriterion("month not between", value1, value2, "month");
            return this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("amount is null");
            return this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("amount is not null");
            return this;
        }

        public Criteria andAmountEqualTo(Double value) {
            addCriterion("amount =", value, "amount");
            return this;
        }

        public Criteria andAmountNotEqualTo(Double value) {
            addCriterion("amount <>", value, "amount");
            return this;
        }

        public Criteria andAmountGreaterThan(Double value) {
            addCriterion("amount >", value, "amount");
            return this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(Double value) {
            addCriterion("amount >=", value, "amount");
            return this;
        }

        public Criteria andAmountLessThan(Double value) {
            addCriterion("amount <", value, "amount");
            return this;
        }

        public Criteria andAmountLessThanOrEqualTo(Double value) {
            addCriterion("amount <=", value, "amount");
            return this;
        }

        public Criteria andAmountIn(List<Double> values) {
            addCriterion("amount in", values, "amount");
            return this;
        }

        public Criteria andAmountNotIn(List<Double> values) {
            addCriterion("amount not in", values, "amount");
            return this;
        }

        public Criteria andAmountBetween(Double value1, Double value2) {
            addCriterion("amount between", value1, value2, "amount");
            return this;
        }

        public Criteria andAmountNotBetween(Double value1, Double value2) {
            addCriterion("amount not between", value1, value2, "amount");
            return this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("created is null");
            return this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("created is not null");
            return this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("created =", value, "created");
            return this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("created <>", value, "created");
            return this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("created >", value, "created");
            return this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("created >=", value, "created");
            return this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("created <", value, "created");
            return this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("created <=", value, "created");
            return this;
        }

        public Criteria andCreatedLike(Date value) {
            addCriterion("created like", value, "created");
            return this;
        }

        public Criteria andCreatedNotLike(Date value) {
            addCriterion("created not like", value, "created");
            return this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("created in", values, "created");
            return this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("created not in", values, "created");
            return this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("created between", value1, value2, "created");
            return this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("created not between", value1, value2, "created");
            return this;
        }

        public Criteria andModifiedIsNull() {
            addCriterion("modified is null");
            return this;
        }

        public Criteria andModifiedIsNotNull() {
            addCriterion("modified is not null");
            return this;
        }

        public Criteria andModifiedEqualTo(Date value) {
            addCriterion("modified =", value, "modified");
            return this;
        }

        public Criteria andModifiedNotEqualTo(Date value) {
            addCriterion("modified <>", value, "modified");
            return this;
        }

        public Criteria andModifiedGreaterThan(Date value) {
            addCriterion("modified >", value, "modified");
            return this;
        }

        public Criteria andModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("modified >=", value, "modified");
            return this;
        }

        public Criteria andModifiedLessThan(Date value) {
            addCriterion("modified <", value, "modified");
            return this;
        }

        public Criteria andModifiedLessThanOrEqualTo(Date value) {
            addCriterion("modified <=", value, "modified");
            return this;
        }

        public Criteria andModifiedLike(Date value) {
            addCriterion("modified like", value, "modified");
            return this;
        }

        public Criteria andModifiedNotLike(Date value) {
            addCriterion("modified not like", value, "modified");
            return this;
        }

        public Criteria andModifiedIn(List<Date> values) {
            addCriterion("modified in", values, "modified");
            return this;
        }

        public Criteria andModifiedNotIn(List<Date> values) {
            addCriterion("modified not in", values, "modified");
            return this;
        }

        public Criteria andModifiedBetween(Date value1, Date value2) {
            addCriterion("modified between", value1, value2, "modified");
            return this;
        }

        public Criteria andModifiedNotBetween(Date value1, Date value2) {
            addCriterion("modified not between", value1, value2, "modified");
            return this;
        }

        public Criteria andLoginIsNull() {
            addCriterion("login is null");
            return this;
        }

        public Criteria andLoginIsNotNull() {
            addCriterion("login is not null");
            return this;
        }

        public Criteria andLoginEqualTo(String value) {
            addCriterion("login =", value, "login");
            return this;
        }

        public Criteria andLoginNotEqualTo(String value) {
            addCriterion("login <>", value, "login");
            return this;
        }

        public Criteria andLoginGreaterThan(String value) {
            addCriterion("login >", value, "login");
            return this;
        }

        public Criteria andLoginGreaterThanOrEqualTo(String value) {
            addCriterion("login >=", value, "login");
            return this;
        }

        public Criteria andLoginLessThan(String value) {
            addCriterion("login <", value, "login");
            return this;
        }

        public Criteria andLoginLessThanOrEqualTo(String value) {
            addCriterion("login <=", value, "login");
            return this;
        }

        public Criteria andLoginLike(String value) {
            addCriterion("login like", value, "login");
            return this;
        }

        public Criteria andLoginNotLike(String value) {
            addCriterion("login not like", value, "login");
            return this;
        }

        public Criteria andLoginIn(List<String> values) {
            addCriterion("login in", values, "login");
            return this;
        }

        public Criteria andLoginNotIn(List<String> values) {
            addCriterion("login not in", values, "login");
            return this;
        }

        public Criteria andLoginBetween(String value1, String value2) {
            addCriterion("login between", value1, value2, "login");
            return this;
        }

        public Criteria andLoginNotBetween(String value1, String value2) {
            addCriterion("login not between", value1, value2, "login");
            return this;
        }
    }
}