package com.retailsbs.logistikapp.logistic.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RouteStoreExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_route_store
     *
     * @abatorgenerated Thu Sep 03 10:12:15 CDT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_route_store
     *
     * @abatorgenerated Thu Sep 03 10:12:15 CDT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_route_store
     *
     * @abatorgenerated Thu Sep 03 10:12:15 CDT 2015
     */
    public RouteStoreExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_route_store
     *
     * @abatorgenerated Thu Sep 03 10:12:15 CDT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_route_store
     *
     * @abatorgenerated Thu Sep 03 10:12:15 CDT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_route_store
     *
     * @abatorgenerated Thu Sep 03 10:12:15 CDT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_route_store
     *
     * @abatorgenerated Thu Sep 03 10:12:15 CDT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_route_store
     *
     * @abatorgenerated Thu Sep 03 10:12:15 CDT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_route_store
     *
     * @abatorgenerated Thu Sep 03 10:12:15 CDT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_route_store
     *
     * @abatorgenerated Thu Sep 03 10:12:15 CDT 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table lgk_route_store
     *
     * @abatorgenerated Thu Sep 03 10:12:15 CDT 2015
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andId_route_storeIsNull() {
            addCriterion("id_route_store is null");
            return this;
        }

        public Criteria andId_route_storeIsNotNull() {
            addCriterion("id_route_store is not null");
            return this;
        }

        public Criteria andId_route_storeEqualTo(Long value) {
            addCriterion("id_route_store =", value, "id_route_store");
            return this;
        }

        public Criteria andId_route_storeNotEqualTo(Long value) {
            addCriterion("id_route_store <>", value, "id_route_store");
            return this;
        }

        public Criteria andId_route_storeGreaterThan(Long value) {
            addCriterion("id_route_store >", value, "id_route_store");
            return this;
        }

        public Criteria andId_route_storeGreaterThanOrEqualTo(Long value) {
            addCriterion("id_route_store >=", value, "id_route_store");
            return this;
        }

        public Criteria andId_route_storeLessThan(Long value) {
            addCriterion("id_route_store <", value, "id_route_store");
            return this;
        }

        public Criteria andId_route_storeLessThanOrEqualTo(Long value) {
            addCriterion("id_route_store <=", value, "id_route_store");
            return this;
        }

        public Criteria andId_route_storeIn(List<Long> values) {
            addCriterion("id_route_store in", values, "id_route_store");
            return this;
        }

        public Criteria andId_route_storeNotIn(List<Long> values) {
            addCriterion("id_route_store not in", values, "id_route_store");
            return this;
        }

        public Criteria andId_route_storeBetween(Long value1, Long value2) {
            addCriterion("id_route_store between", value1, value2, "id_route_store");
            return this;
        }

        public Criteria andId_route_storeNotBetween(Long value1, Long value2) {
            addCriterion("id_route_store not between", value1, value2, "id_route_store");
            return this;
        }

        public Criteria andId_routeIsNull() {
            addCriterion("id_route is null");
            return this;
        }

        public Criteria andId_routeIsNotNull() {
            addCriterion("id_route is not null");
            return this;
        }

        public Criteria andId_routeEqualTo(Long value) {
            addCriterion("id_route =", value, "id_route");
            return this;
        }

        public Criteria andId_routeNotEqualTo(Long value) {
            addCriterion("id_route <>", value, "id_route");
            return this;
        }

        public Criteria andId_routeGreaterThan(Long value) {
            addCriterion("id_route >", value, "id_route");
            return this;
        }

        public Criteria andId_routeGreaterThanOrEqualTo(Long value) {
            addCriterion("id_route >=", value, "id_route");
            return this;
        }

        public Criteria andId_routeLessThan(Long value) {
            addCriterion("id_route <", value, "id_route");
            return this;
        }

        public Criteria andId_routeLessThanOrEqualTo(Long value) {
            addCriterion("id_route <=", value, "id_route");
            return this;
        }

        public Criteria andId_routeIn(List<Long> values) {
            addCriterion("id_route in", values, "id_route");
            return this;
        }

        public Criteria andId_routeNotIn(List<Long> values) {
            addCriterion("id_route not in", values, "id_route");
            return this;
        }

        public Criteria andId_routeBetween(Long value1, Long value2) {
            addCriterion("id_route between", value1, value2, "id_route");
            return this;
        }

        public Criteria andId_routeNotBetween(Long value1, Long value2) {
            addCriterion("id_route not between", value1, value2, "id_route");
            return this;
        }

        public Criteria andId_storeIsNull() {
            addCriterion("id_store is null");
            return this;
        }

        public Criteria andId_storeIsNotNull() {
            addCriterion("id_store is not null");
            return this;
        }

        public Criteria andId_storeEqualTo(Long value) {
            addCriterion("id_store =", value, "id_store");
            return this;
        }

        public Criteria andId_storeNotEqualTo(Long value) {
            addCriterion("id_store <>", value, "id_store");
            return this;
        }

        public Criteria andId_storeGreaterThan(Long value) {
            addCriterion("id_store >", value, "id_store");
            return this;
        }

        public Criteria andId_storeGreaterThanOrEqualTo(Long value) {
            addCriterion("id_store >=", value, "id_store");
            return this;
        }

        public Criteria andId_storeLessThan(Long value) {
            addCriterion("id_store <", value, "id_store");
            return this;
        }

        public Criteria andId_storeLessThanOrEqualTo(Long value) {
            addCriterion("id_store <=", value, "id_store");
            return this;
        }

        public Criteria andId_storeIn(List<Long> values) {
            addCriterion("id_store in", values, "id_store");
            return this;
        }

        public Criteria andId_storeNotIn(List<Long> values) {
            addCriterion("id_store not in", values, "id_store");
            return this;
        }

        public Criteria andId_storeBetween(Long value1, Long value2) {
            addCriterion("id_store between", value1, value2, "id_store");
            return this;
        }

        public Criteria andId_storeNotBetween(Long value1, Long value2) {
            addCriterion("id_store not between", value1, value2, "id_store");
            return this;
        }

        public Criteria andOrderbyIsNull() {
            addCriterion("orderby is null");
            return this;
        }

        public Criteria andOrderbyIsNotNull() {
            addCriterion("orderby is not null");
            return this;
        }

        public Criteria andOrderbyEqualTo(Integer value) {
            addCriterion("orderby =", value, "orderby");
            return this;
        }

        public Criteria andOrderbyNotEqualTo(Integer value) {
            addCriterion("orderby <>", value, "orderby");
            return this;
        }

        public Criteria andOrderbyGreaterThan(Integer value) {
            addCriterion("orderby >", value, "orderby");
            return this;
        }

        public Criteria andOrderbyGreaterThanOrEqualTo(Integer value) {
            addCriterion("orderby >=", value, "orderby");
            return this;
        }

        public Criteria andOrderbyLessThan(Integer value) {
            addCriterion("orderby <", value, "orderby");
            return this;
        }

        public Criteria andOrderbyLessThanOrEqualTo(Integer value) {
            addCriterion("orderby <=", value, "orderby");
            return this;
        }

        public Criteria andOrderbyIn(List<Integer> values) {
            addCriterion("orderby in", values, "orderby");
            return this;
        }

        public Criteria andOrderbyNotIn(List<Integer> values) {
            addCriterion("orderby not in", values, "orderby");
            return this;
        }

        public Criteria andOrderbyBetween(Integer value1, Integer value2) {
            addCriterion("orderby between", value1, value2, "orderby");
            return this;
        }

        public Criteria andOrderbyNotBetween(Integer value1, Integer value2) {
            addCriterion("orderby not between", value1, value2, "orderby");
            return this;
        }

        public Criteria andLog_createdIsNull() {
            addCriterion("log_created is null");
            return this;
        }

        public Criteria andLog_createdIsNotNull() {
            addCriterion("log_created is not null");
            return this;
        }

        public Criteria andLog_createdEqualTo(Date value) {
            addCriterion("log_created =", value, "log_created");
            return this;
        }

        public Criteria andLog_createdNotEqualTo(Date value) {
            addCriterion("log_created <>", value, "log_created");
            return this;
        }

        public Criteria andLog_createdGreaterThan(Date value) {
            addCriterion("log_created >", value, "log_created");
            return this;
        }

        public Criteria andLog_createdGreaterThanOrEqualTo(Date value) {
            addCriterion("log_created >=", value, "log_created");
            return this;
        }

        public Criteria andLog_createdLessThan(Date value) {
            addCriterion("log_created <", value, "log_created");
            return this;
        }

        public Criteria andLog_createdLessThanOrEqualTo(Date value) {
            addCriterion("log_created <=", value, "log_created");
            return this;
        }

        public Criteria andLog_createdIn(List<Date> values) {
            addCriterion("log_created in", values, "log_created");
            return this;
        }

        public Criteria andLog_createdNotIn(List<Date> values) {
            addCriterion("log_created not in", values, "log_created");
            return this;
        }

        public Criteria andLog_createdBetween(Date value1, Date value2) {
            addCriterion("log_created between", value1, value2, "log_created");
            return this;
        }

        public Criteria andLog_createdNotBetween(Date value1, Date value2) {
            addCriterion("log_created not between", value1, value2, "log_created");
            return this;
        }

        public Criteria andLog_created_loginIsNull() {
            addCriterion("log_created_login is null");
            return this;
        }

        public Criteria andLog_created_loginIsNotNull() {
            addCriterion("log_created_login is not null");
            return this;
        }

        public Criteria andLog_created_loginEqualTo(String value) {
            addCriterion("log_created_login =", value, "log_created_login");
            return this;
        }

        public Criteria andLog_created_loginNotEqualTo(String value) {
            addCriterion("log_created_login <>", value, "log_created_login");
            return this;
        }

        public Criteria andLog_created_loginGreaterThan(String value) {
            addCriterion("log_created_login >", value, "log_created_login");
            return this;
        }

        public Criteria andLog_created_loginGreaterThanOrEqualTo(String value) {
            addCriterion("log_created_login >=", value, "log_created_login");
            return this;
        }

        public Criteria andLog_created_loginLessThan(String value) {
            addCriterion("log_created_login <", value, "log_created_login");
            return this;
        }

        public Criteria andLog_created_loginLessThanOrEqualTo(String value) {
            addCriterion("log_created_login <=", value, "log_created_login");
            return this;
        }

        public Criteria andLog_created_loginLike(String value) {
            addCriterion("log_created_login like", value, "log_created_login");
            return this;
        }

        public Criteria andLog_created_loginNotLike(String value) {
            addCriterion("log_created_login not like", value, "log_created_login");
            return this;
        }

        public Criteria andLog_created_loginIn(List<String> values) {
            addCriterion("log_created_login in", values, "log_created_login");
            return this;
        }

        public Criteria andLog_created_loginNotIn(List<String> values) {
            addCriterion("log_created_login not in", values, "log_created_login");
            return this;
        }

        public Criteria andLog_created_loginBetween(String value1, String value2) {
            addCriterion("log_created_login between", value1, value2, "log_created_login");
            return this;
        }

        public Criteria andLog_created_loginNotBetween(String value1, String value2) {
            addCriterion("log_created_login not between", value1, value2, "log_created_login");
            return this;
        }

        public Criteria andLog_modifiedIsNull() {
            addCriterion("log_modified is null");
            return this;
        }

        public Criteria andLog_modifiedIsNotNull() {
            addCriterion("log_modified is not null");
            return this;
        }

        public Criteria andLog_modifiedEqualTo(Date value) {
            addCriterion("log_modified =", value, "log_modified");
            return this;
        }

        public Criteria andLog_modifiedNotEqualTo(Date value) {
            addCriterion("log_modified <>", value, "log_modified");
            return this;
        }

        public Criteria andLog_modifiedGreaterThan(Date value) {
            addCriterion("log_modified >", value, "log_modified");
            return this;
        }

        public Criteria andLog_modifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("log_modified >=", value, "log_modified");
            return this;
        }

        public Criteria andLog_modifiedLessThan(Date value) {
            addCriterion("log_modified <", value, "log_modified");
            return this;
        }

        public Criteria andLog_modifiedLessThanOrEqualTo(Date value) {
            addCriterion("log_modified <=", value, "log_modified");
            return this;
        }

        public Criteria andLog_modifiedIn(List<Date> values) {
            addCriterion("log_modified in", values, "log_modified");
            return this;
        }

        public Criteria andLog_modifiedNotIn(List<Date> values) {
            addCriterion("log_modified not in", values, "log_modified");
            return this;
        }

        public Criteria andLog_modifiedBetween(Date value1, Date value2) {
            addCriterion("log_modified between", value1, value2, "log_modified");
            return this;
        }

        public Criteria andLog_modifiedNotBetween(Date value1, Date value2) {
            addCriterion("log_modified not between", value1, value2, "log_modified");
            return this;
        }

        public Criteria andLog_modified_loginIsNull() {
            addCriterion("log_modified_login is null");
            return this;
        }

        public Criteria andLog_modified_loginIsNotNull() {
            addCriterion("log_modified_login is not null");
            return this;
        }

        public Criteria andLog_modified_loginEqualTo(String value) {
            addCriterion("log_modified_login =", value, "log_modified_login");
            return this;
        }

        public Criteria andLog_modified_loginNotEqualTo(String value) {
            addCriterion("log_modified_login <>", value, "log_modified_login");
            return this;
        }

        public Criteria andLog_modified_loginGreaterThan(String value) {
            addCriterion("log_modified_login >", value, "log_modified_login");
            return this;
        }

        public Criteria andLog_modified_loginGreaterThanOrEqualTo(String value) {
            addCriterion("log_modified_login >=", value, "log_modified_login");
            return this;
        }

        public Criteria andLog_modified_loginLessThan(String value) {
            addCriterion("log_modified_login <", value, "log_modified_login");
            return this;
        }

        public Criteria andLog_modified_loginLessThanOrEqualTo(String value) {
            addCriterion("log_modified_login <=", value, "log_modified_login");
            return this;
        }

        public Criteria andLog_modified_loginLike(String value) {
            addCriterion("log_modified_login like", value, "log_modified_login");
            return this;
        }

        public Criteria andLog_modified_loginNotLike(String value) {
            addCriterion("log_modified_login not like", value, "log_modified_login");
            return this;
        }

        public Criteria andLog_modified_loginIn(List<String> values) {
            addCriterion("log_modified_login in", values, "log_modified_login");
            return this;
        }

        public Criteria andLog_modified_loginNotIn(List<String> values) {
            addCriterion("log_modified_login not in", values, "log_modified_login");
            return this;
        }

        public Criteria andLog_modified_loginBetween(String value1, String value2) {
            addCriterion("log_modified_login between", value1, value2, "log_modified_login");
            return this;
        }

        public Criteria andLog_modified_loginNotBetween(String value1, String value2) {
            addCriterion("log_modified_login not between", value1, value2, "log_modified_login");
            return this;
        }
    }
}