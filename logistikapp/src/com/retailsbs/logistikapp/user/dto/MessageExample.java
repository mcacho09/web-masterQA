package com.retailsbs.logistikapp.user.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class MessageExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_message
     *
     * @abatorgenerated Mon Aug 03 14:45:54 CDT 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_message
     *
     * @abatorgenerated Mon Aug 03 14:45:54 CDT 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_message
     *
     * @abatorgenerated Mon Aug 03 14:45:54 CDT 2015
     */
    public MessageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_message
     *
     * @abatorgenerated Mon Aug 03 14:45:54 CDT 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_message
     *
     * @abatorgenerated Mon Aug 03 14:45:54 CDT 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_message
     *
     * @abatorgenerated Mon Aug 03 14:45:54 CDT 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_message
     *
     * @abatorgenerated Mon Aug 03 14:45:54 CDT 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_message
     *
     * @abatorgenerated Mon Aug 03 14:45:54 CDT 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_message
     *
     * @abatorgenerated Mon Aug 03 14:45:54 CDT 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_message
     *
     * @abatorgenerated Mon Aug 03 14:45:54 CDT 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table lgk_message
     *
     * @abatorgenerated Mon Aug 03 14:45:54 CDT 2015
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andId_messageIsNull() {
            addCriterion("id_message is null");
            return this;
        }

        public Criteria andId_messageIsNotNull() {
            addCriterion("id_message is not null");
            return this;
        }

        public Criteria andId_messageEqualTo(Long value) {
            addCriterion("id_message =", value, "id_message");
            return this;
        }

        public Criteria andId_messageNotEqualTo(Long value) {
            addCriterion("id_message <>", value, "id_message");
            return this;
        }

        public Criteria andId_messageGreaterThan(Long value) {
            addCriterion("id_message >", value, "id_message");
            return this;
        }

        public Criteria andId_messageGreaterThanOrEqualTo(Long value) {
            addCriterion("id_message >=", value, "id_message");
            return this;
        }

        public Criteria andId_messageLessThan(Long value) {
            addCriterion("id_message <", value, "id_message");
            return this;
        }

        public Criteria andId_messageLessThanOrEqualTo(Long value) {
            addCriterion("id_message <=", value, "id_message");
            return this;
        }

        public Criteria andId_messageIn(List<Long> values) {
            addCriterion("id_message in", values, "id_message");
            return this;
        }

        public Criteria andId_messageNotIn(List<Long> values) {
            addCriterion("id_message not in", values, "id_message");
            return this;
        }

        public Criteria andId_messageBetween(Long value1, Long value2) {
            addCriterion("id_message between", value1, value2, "id_message");
            return this;
        }

        public Criteria andId_messageNotBetween(Long value1, Long value2) {
            addCriterion("id_message not between", value1, value2, "id_message");
            return this;
        }

        public Criteria andId_user_messageIsNull() {
            addCriterion("id_user_message is null");
            return this;
        }

        public Criteria andId_user_messageIsNotNull() {
            addCriterion("id_user_message is not null");
            return this;
        }

        public Criteria andId_user_messageEqualTo(Long value) {
            addCriterion("id_user_message =", value, "id_user_message");
            return this;
        }

        public Criteria andId_user_messageNotEqualTo(Long value) {
            addCriterion("id_user_message <>", value, "id_user_message");
            return this;
        }

        public Criteria andId_user_messageGreaterThan(Long value) {
            addCriterion("id_user_message >", value, "id_user_message");
            return this;
        }

        public Criteria andId_user_messageGreaterThanOrEqualTo(Long value) {
            addCriterion("id_user_message >=", value, "id_user_message");
            return this;
        }

        public Criteria andId_user_messageLessThan(Long value) {
            addCriterion("id_user_message <", value, "id_user_message");
            return this;
        }

        public Criteria andId_user_messageLessThanOrEqualTo(Long value) {
            addCriterion("id_user_message <=", value, "id_user_message");
            return this;
        }

        public Criteria andId_user_messageIn(List<Long> values) {
            addCriterion("id_user_message in", values, "id_user_message");
            return this;
        }

        public Criteria andId_user_messageNotIn(List<Long> values) {
            addCriterion("id_user_message not in", values, "id_user_message");
            return this;
        }

        public Criteria andId_user_messageBetween(Long value1, Long value2) {
            addCriterion("id_user_message between", value1, value2, "id_user_message");
            return this;
        }

        public Criteria andId_user_messageNotBetween(Long value1, Long value2) {
            addCriterion("id_user_message not between", value1, value2, "id_user_message");
            return this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("created is null");
            return this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("created is not null");
            return this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("created =", value, "created");
            return this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("created <>", value, "created");
            return this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("created >", value, "created");
            return this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("created >=", value, "created");
            return this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("created <", value, "created");
            return this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("created <=", value, "created");
            return this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("created in", values, "created");
            return this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("created not in", values, "created");
            return this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("created between", value1, value2, "created");
            return this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("created not between", value1, value2, "created");
            return this;
        }

        public Criteria andMessageIsNull() {
            addCriterion("message is null");
            return this;
        }

        public Criteria andMessageIsNotNull() {
            addCriterion("message is not null");
            return this;
        }

        public Criteria andMessageEqualTo(String value) {
            addCriterion("message =", value, "message");
            return this;
        }

        public Criteria andMessageNotEqualTo(String value) {
            addCriterion("message <>", value, "message");
            return this;
        }

        public Criteria andMessageGreaterThan(String value) {
            addCriterion("message >", value, "message");
            return this;
        }

        public Criteria andMessageGreaterThanOrEqualTo(String value) {
            addCriterion("message >=", value, "message");
            return this;
        }

        public Criteria andMessageLessThan(String value) {
            addCriterion("message <", value, "message");
            return this;
        }

        public Criteria andMessageLessThanOrEqualTo(String value) {
            addCriterion("message <=", value, "message");
            return this;
        }

        public Criteria andMessageLike(String value) {
            addCriterion("message like", value, "message");
            return this;
        }

        public Criteria andMessageNotLike(String value) {
            addCriterion("message not like", value, "message");
            return this;
        }

        public Criteria andMessageIn(List<String> values) {
            addCriterion("message in", values, "message");
            return this;
        }

        public Criteria andMessageNotIn(List<String> values) {
            addCriterion("message not in", values, "message");
            return this;
        }

        public Criteria andMessageBetween(String value1, String value2) {
            addCriterion("message between", value1, value2, "message");
            return this;
        }

        public Criteria andMessageNotBetween(String value1, String value2) {
            addCriterion("message not between", value1, value2, "message");
            return this;
        }

        public Criteria andSendIsNull() {
            addCriterion("send is null");
            return this;
        }

        public Criteria andSendIsNotNull() {
            addCriterion("send is not null");
            return this;
        }

        public Criteria andSendEqualTo(String value) {
            addCriterion("send =", value, "send");
            return this;
        }

        public Criteria andSendNotEqualTo(String value) {
            addCriterion("send <>", value, "send");
            return this;
        }

        public Criteria andSendGreaterThan(String value) {
            addCriterion("send >", value, "send");
            return this;
        }

        public Criteria andSendGreaterThanOrEqualTo(String value) {
            addCriterion("send >=", value, "send");
            return this;
        }

        public Criteria andSendLessThan(String value) {
            addCriterion("send <", value, "send");
            return this;
        }

        public Criteria andSendLessThanOrEqualTo(String value) {
            addCriterion("send <=", value, "send");
            return this;
        }

        public Criteria andSendLike(String value) {
            addCriterion("send like", value, "send");
            return this;
        }

        public Criteria andSendNotLike(String value) {
            addCriterion("send not like", value, "send");
            return this;
        }

        public Criteria andSendIn(List<String> values) {
            addCriterion("send in", values, "send");
            return this;
        }

        public Criteria andSendNotIn(List<String> values) {
            addCriterion("send not in", values, "send");
            return this;
        }

        public Criteria andSendBetween(String value1, String value2) {
            addCriterion("send between", value1, value2, "send");
            return this;
        }

        public Criteria andSendNotBetween(String value1, String value2) {
            addCriterion("send not between", value1, value2, "send");
            return this;
        }

        public Criteria andReadIsNull() {
            addCriterion("read is null");
            return this;
        }

        public Criteria andReadIsNotNull() {
            addCriterion("read is not null");
            return this;
        }

        public Criteria andReadEqualTo(String value) {
            addCriterion("read =", value, "read");
            return this;
        }

        public Criteria andReadNotEqualTo(String value) {
            addCriterion("read <>", value, "read");
            return this;
        }

        public Criteria andReadGreaterThan(String value) {
            addCriterion("read >", value, "read");
            return this;
        }

        public Criteria andReadGreaterThanOrEqualTo(String value) {
            addCriterion("read >=", value, "read");
            return this;
        }

        public Criteria andReadLessThan(String value) {
            addCriterion("read <", value, "read");
            return this;
        }

        public Criteria andReadLessThanOrEqualTo(String value) {
            addCriterion("read <=", value, "read");
            return this;
        }

        public Criteria andReadLike(String value) {
            addCriterion("read like", value, "read");
            return this;
        }

        public Criteria andReadNotLike(String value) {
            addCriterion("read not like", value, "read");
            return this;
        }

        public Criteria andReadIn(List<String> values) {
            addCriterion("read in", values, "read");
            return this;
        }

        public Criteria andReadNotIn(List<String> values) {
            addCriterion("read not in", values, "read");
            return this;
        }

        public Criteria andReadBetween(String value1, String value2) {
            addCriterion("read between", value1, value2, "read");
            return this;
        }

        public Criteria andReadNotBetween(String value1, String value2) {
            addCriterion("read not between", value1, value2, "read");
            return this;
        }

        public Criteria andId_userIsNull() {
            addCriterion("id_user is null");
            return this;
        }

        public Criteria andId_userIsNotNull() {
            addCriterion("id_user is not null");
            return this;
        }

        public Criteria andId_userEqualTo(Long value) {
            addCriterion("id_user =", value, "id_user");
            return this;
        }

        public Criteria andId_userNotEqualTo(Long value) {
            addCriterion("id_user <>", value, "id_user");
            return this;
        }

        public Criteria andId_userGreaterThan(Long value) {
            addCriterion("id_user >", value, "id_user");
            return this;
        }

        public Criteria andId_userGreaterThanOrEqualTo(Long value) {
            addCriterion("id_user >=", value, "id_user");
            return this;
        }

        public Criteria andId_userLessThan(Long value) {
            addCriterion("id_user <", value, "id_user");
            return this;
        }

        public Criteria andId_userLessThanOrEqualTo(Long value) {
            addCriterion("id_user <=", value, "id_user");
            return this;
        }

        public Criteria andId_userIn(List<Long> values) {
            addCriterion("id_user in", values, "id_user");
            return this;
        }

        public Criteria andId_userNotIn(List<Long> values) {
            addCriterion("id_user not in", values, "id_user");
            return this;
        }

        public Criteria andId_userBetween(Long value1, Long value2) {
            addCriterion("id_user between", value1, value2, "id_user");
            return this;
        }

        public Criteria andId_userNotBetween(Long value1, Long value2) {
            addCriterion("id_user not between", value1, value2, "id_user");
            return this;
        }
    }
}