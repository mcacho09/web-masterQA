package com.retailsbs.logistikapp.retail.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ActivesVisitedExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_actives_visited
     *
     * @abatorgenerated Thu Nov 09 15:17:29 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_actives_visited
     *
     * @abatorgenerated Thu Nov 09 15:17:29 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives_visited
     *
     * @abatorgenerated Thu Nov 09 15:17:29 CST 2017
     */
    public ActivesVisitedExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives_visited
     *
     * @abatorgenerated Thu Nov 09 15:17:29 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives_visited
     *
     * @abatorgenerated Thu Nov 09 15:17:29 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives_visited
     *
     * @abatorgenerated Thu Nov 09 15:17:29 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives_visited
     *
     * @abatorgenerated Thu Nov 09 15:17:29 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives_visited
     *
     * @abatorgenerated Thu Nov 09 15:17:29 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives_visited
     *
     * @abatorgenerated Thu Nov 09 15:17:29 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives_visited
     *
     * @abatorgenerated Thu Nov 09 15:17:29 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table lgk_actives_visited
     *
     * @abatorgenerated Thu Nov 09 15:17:29 CST 2017
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdActivesVisitedIsNull() {
            addCriterion("id_actives_visited is null");
            return this;
        }

        public Criteria andIdActivesVisitedIsNotNull() {
            addCriterion("id_actives_visited is not null");
            return this;
        }

        public Criteria andIdActivesVisitedEqualTo(Integer value) {
            addCriterion("id_actives_visited =", value, "idActivesVisited");
            return this;
        }

        public Criteria andIdActivesVisitedNotEqualTo(Integer value) {
            addCriterion("id_actives_visited <>", value, "idActivesVisited");
            return this;
        }

        public Criteria andIdActivesVisitedGreaterThan(Integer value) {
            addCriterion("id_actives_visited >", value, "idActivesVisited");
            return this;
        }

        public Criteria andIdActivesVisitedGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_actives_visited >=", value, "idActivesVisited");
            return this;
        }

        public Criteria andIdActivesVisitedLessThan(Integer value) {
            addCriterion("id_actives_visited <", value, "idActivesVisited");
            return this;
        }

        public Criteria andIdActivesVisitedLessThanOrEqualTo(Integer value) {
            addCriterion("id_actives_visited <=", value, "idActivesVisited");
            return this;
        }

        public Criteria andIdActivesVisitedIn(List<Integer> values) {
            addCriterion("id_actives_visited in", values, "idActivesVisited");
            return this;
        }

        public Criteria andIdActivesVisitedNotIn(List<Integer> values) {
            addCriterion("id_actives_visited not in", values, "idActivesVisited");
            return this;
        }

        public Criteria andIdActivesVisitedBetween(Integer value1, Integer value2) {
            addCriterion("id_actives_visited between", value1, value2, "idActivesVisited");
            return this;
        }

        public Criteria andIdActivesVisitedNotBetween(Integer value1, Integer value2) {
            addCriterion("id_actives_visited not between", value1, value2, "idActivesVisited");
            return this;
        }

        public Criteria andId_activesIsNull() {
            addCriterion("id_actives is null");
            return this;
        }

        public Criteria andId_activesIsNotNull() {
            addCriterion("id_actives is not null");
            return this;
        }

        public Criteria andId_activesEqualTo(Long value) {
            addCriterion("id_actives =", value, "id_actives");
            return this;
        }

        public Criteria andId_activesNotEqualTo(Long value) {
            addCriterion("id_actives <>", value, "id_actives");
            return this;
        }

        public Criteria andId_activesGreaterThan(Long value) {
            addCriterion("id_actives >", value, "id_actives");
            return this;
        }

        public Criteria andId_activesGreaterThanOrEqualTo(Long value) {
            addCriterion("id_actives >=", value, "id_actives");
            return this;
        }

        public Criteria andId_activesLessThan(Long value) {
            addCriterion("id_actives <", value, "id_actives");
            return this;
        }

        public Criteria andId_activesLessThanOrEqualTo(Long value) {
            addCriterion("id_actives <=", value, "id_actives");
            return this;
        }

        public Criteria andId_activesIn(List<Long> values) {
            addCriterion("id_actives in", values, "id_actives");
            return this;
        }

        public Criteria andId_activesNotIn(List<Long> values) {
            addCriterion("id_actives not in", values, "id_actives");
            return this;
        }

        public Criteria andId_activesBetween(Long value1, Long value2) {
            addCriterion("id_actives between", value1, value2, "id_actives");
            return this;
        }

        public Criteria andId_activesNotBetween(Long value1, Long value2) {
            addCriterion("id_actives not between", value1, value2, "id_actives");
            return this;
        }

        public Criteria andId_userIsNull() {
            addCriterion("id_user is null");
            return this;
        }

        public Criteria andId_userIsNotNull() {
            addCriterion("id_user is not null");
            return this;
        }

        public Criteria andId_userEqualTo(Long value) {
            addCriterion("id_user =", value, "id_user");
            return this;
        }

        public Criteria andId_userNotEqualTo(Long value) {
            addCriterion("id_user <>", value, "id_user");
            return this;
        }

        public Criteria andId_userGreaterThan(Long value) {
            addCriterion("id_user >", value, "id_user");
            return this;
        }

        public Criteria andId_userGreaterThanOrEqualTo(Long value) {
            addCriterion("id_user >=", value, "id_user");
            return this;
        }

        public Criteria andId_userLessThan(Long value) {
            addCriterion("id_user <", value, "id_user");
            return this;
        }

        public Criteria andId_userLessThanOrEqualTo(Long value) {
            addCriterion("id_user <=", value, "id_user");
            return this;
        }

        public Criteria andId_userIn(List<Long> values) {
            addCriterion("id_user in", values, "id_user");
            return this;
        }

        public Criteria andId_userNotIn(List<Long> values) {
            addCriterion("id_user not in", values, "id_user");
            return this;
        }

        public Criteria andId_userBetween(Long value1, Long value2) {
            addCriterion("id_user between", value1, value2, "id_user");
            return this;
        }

        public Criteria andId_userNotBetween(Long value1, Long value2) {
            addCriterion("id_user not between", value1, value2, "id_user");
            return this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("created is null");
            return this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("created is not null");
            return this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("created =", value, "created");
            return this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("created <>", value, "created");
            return this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("created >", value, "created");
            return this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("created >=", value, "created");
            return this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("created <", value, "created");
            return this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("created <=", value, "created");
            return this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("created in", values, "created");
            return this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("created not in", values, "created");
            return this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("created between", value1, value2, "created");
            return this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("created not between", value1, value2, "created");
            return this;
        }

        public Criteria andLatitudeIsNull() {
            addCriterion("latitude is null");
            return this;
        }

        public Criteria andLatitudeIsNotNull() {
            addCriterion("latitude is not null");
            return this;
        }

        public Criteria andLatitudeEqualTo(Double value) {
            addCriterion("latitude =", value, "latitude");
            return this;
        }

        public Criteria andLatitudeNotEqualTo(Double value) {
            addCriterion("latitude <>", value, "latitude");
            return this;
        }

        public Criteria andLatitudeGreaterThan(Double value) {
            addCriterion("latitude >", value, "latitude");
            return this;
        }

        public Criteria andLatitudeGreaterThanOrEqualTo(Double value) {
            addCriterion("latitude >=", value, "latitude");
            return this;
        }

        public Criteria andLatitudeLessThan(Double value) {
            addCriterion("latitude <", value, "latitude");
            return this;
        }

        public Criteria andLatitudeLessThanOrEqualTo(Double value) {
            addCriterion("latitude <=", value, "latitude");
            return this;
        }

        public Criteria andLatitudeIn(List<Double> values) {
            addCriterion("latitude in", values, "latitude");
            return this;
        }

        public Criteria andLatitudeNotIn(List<Double> values) {
            addCriterion("latitude not in", values, "latitude");
            return this;
        }

        public Criteria andLatitudeBetween(Double value1, Double value2) {
            addCriterion("latitude between", value1, value2, "latitude");
            return this;
        }

        public Criteria andLatitudeNotBetween(Double value1, Double value2) {
            addCriterion("latitude not between", value1, value2, "latitude");
            return this;
        }

        public Criteria andLongitudeIsNull() {
            addCriterion("longitude is null");
            return this;
        }

        public Criteria andLongitudeIsNotNull() {
            addCriterion("longitude is not null");
            return this;
        }

        public Criteria andLongitudeEqualTo(Double value) {
            addCriterion("longitude =", value, "longitude");
            return this;
        }

        public Criteria andLongitudeNotEqualTo(Double value) {
            addCriterion("longitude <>", value, "longitude");
            return this;
        }

        public Criteria andLongitudeGreaterThan(Double value) {
            addCriterion("longitude >", value, "longitude");
            return this;
        }

        public Criteria andLongitudeGreaterThanOrEqualTo(Double value) {
            addCriterion("longitude >=", value, "longitude");
            return this;
        }

        public Criteria andLongitudeLessThan(Double value) {
            addCriterion("longitude <", value, "longitude");
            return this;
        }

        public Criteria andLongitudeLessThanOrEqualTo(Double value) {
            addCriterion("longitude <=", value, "longitude");
            return this;
        }

        public Criteria andLongitudeIn(List<Double> values) {
            addCriterion("longitude in", values, "longitude");
            return this;
        }

        public Criteria andLongitudeNotIn(List<Double> values) {
            addCriterion("longitude not in", values, "longitude");
            return this;
        }

        public Criteria andLongitudeBetween(Double value1, Double value2) {
            addCriterion("longitude between", value1, value2, "longitude");
            return this;
        }

        public Criteria andLongitudeNotBetween(Double value1, Double value2) {
            addCriterion("longitude not between", value1, value2, "longitude");
            return this;
        }

        public Criteria andCommentIsNull() {
            addCriterion("comment is null");
            return this;
        }

        public Criteria andCommentIsNotNull() {
            addCriterion("comment is not null");
            return this;
        }

        public Criteria andCommentEqualTo(String value) {
            addCriterion("comment =", value, "comment");
            return this;
        }

        public Criteria andCommentNotEqualTo(String value) {
            addCriterion("comment <>", value, "comment");
            return this;
        }

        public Criteria andCommentGreaterThan(String value) {
            addCriterion("comment >", value, "comment");
            return this;
        }

        public Criteria andCommentGreaterThanOrEqualTo(String value) {
            addCriterion("comment >=", value, "comment");
            return this;
        }

        public Criteria andCommentLessThan(String value) {
            addCriterion("comment <", value, "comment");
            return this;
        }

        public Criteria andCommentLessThanOrEqualTo(String value) {
            addCriterion("comment <=", value, "comment");
            return this;
        }

        public Criteria andCommentLike(String value) {
            addCriterion("comment like", value, "comment");
            return this;
        }

        public Criteria andCommentNotLike(String value) {
            addCriterion("comment not like", value, "comment");
            return this;
        }

        public Criteria andCommentIn(List<String> values) {
            addCriterion("comment in", values, "comment");
            return this;
        }

        public Criteria andCommentNotIn(List<String> values) {
            addCriterion("comment not in", values, "comment");
            return this;
        }

        public Criteria andCommentBetween(String value1, String value2) {
            addCriterion("comment between", value1, value2, "comment");
            return this;
        }

        public Criteria andCommentNotBetween(String value1, String value2) {
            addCriterion("comment not between", value1, value2, "comment");
            return this;
        }

        public Criteria andImage1IsNull() {
            addCriterion("image1 is null");
            return this;
        }

        public Criteria andImage1IsNotNull() {
            addCriterion("image1 is not null");
            return this;
        }

        public Criteria andImage1EqualTo(String value) {
            addCriterion("image1 =", value, "image1");
            return this;
        }

        public Criteria andImage1NotEqualTo(String value) {
            addCriterion("image1 <>", value, "image1");
            return this;
        }

        public Criteria andImage1GreaterThan(String value) {
            addCriterion("image1 >", value, "image1");
            return this;
        }

        public Criteria andImage1GreaterThanOrEqualTo(String value) {
            addCriterion("image1 >=", value, "image1");
            return this;
        }

        public Criteria andImage1LessThan(String value) {
            addCriterion("image1 <", value, "image1");
            return this;
        }

        public Criteria andImage1LessThanOrEqualTo(String value) {
            addCriterion("image1 <=", value, "image1");
            return this;
        }

        public Criteria andImage1Like(String value) {
            addCriterion("image1 like", value, "image1");
            return this;
        }

        public Criteria andImage1NotLike(String value) {
            addCriterion("image1 not like", value, "image1");
            return this;
        }

        public Criteria andImage1In(List<String> values) {
            addCriterion("image1 in", values, "image1");
            return this;
        }

        public Criteria andImage1NotIn(List<String> values) {
            addCriterion("image1 not in", values, "image1");
            return this;
        }

        public Criteria andImage1Between(String value1, String value2) {
            addCriterion("image1 between", value1, value2, "image1");
            return this;
        }

        public Criteria andImage1NotBetween(String value1, String value2) {
            addCriterion("image1 not between", value1, value2, "image1");
            return this;
        }

        public Criteria andImage2IsNull() {
            addCriterion("image2 is null");
            return this;
        }

        public Criteria andImage2IsNotNull() {
            addCriterion("image2 is not null");
            return this;
        }

        public Criteria andImage2EqualTo(String value) {
            addCriterion("image2 =", value, "image2");
            return this;
        }

        public Criteria andImage2NotEqualTo(String value) {
            addCriterion("image2 <>", value, "image2");
            return this;
        }

        public Criteria andImage2GreaterThan(String value) {
            addCriterion("image2 >", value, "image2");
            return this;
        }

        public Criteria andImage2GreaterThanOrEqualTo(String value) {
            addCriterion("image2 >=", value, "image2");
            return this;
        }

        public Criteria andImage2LessThan(String value) {
            addCriterion("image2 <", value, "image2");
            return this;
        }

        public Criteria andImage2LessThanOrEqualTo(String value) {
            addCriterion("image2 <=", value, "image2");
            return this;
        }

        public Criteria andImage2Like(String value) {
            addCriterion("image2 like", value, "image2");
            return this;
        }

        public Criteria andImage2NotLike(String value) {
            addCriterion("image2 not like", value, "image2");
            return this;
        }

        public Criteria andImage2In(List<String> values) {
            addCriterion("image2 in", values, "image2");
            return this;
        }

        public Criteria andImage2NotIn(List<String> values) {
            addCriterion("image2 not in", values, "image2");
            return this;
        }

        public Criteria andImage2Between(String value1, String value2) {
            addCriterion("image2 between", value1, value2, "image2");
            return this;
        }

        public Criteria andImage2NotBetween(String value1, String value2) {
            addCriterion("image2 not between", value1, value2, "image2");
            return this;
        }

        public Criteria andId_storeIsNull() {
            addCriterion("id_store is null");
            return this;
        }

        public Criteria andId_storeIsNotNull() {
            addCriterion("id_store is not null");
            return this;
        }

        public Criteria andId_storeEqualTo(Long value) {
            addCriterion("id_store =", value, "id_store");
            return this;
        }

        public Criteria andId_storeNotEqualTo(Long value) {
            addCriterion("id_store <>", value, "id_store");
            return this;
        }

        public Criteria andId_storeGreaterThan(Long value) {
            addCriterion("id_store >", value, "id_store");
            return this;
        }

        public Criteria andId_storeGreaterThanOrEqualTo(Long value) {
            addCriterion("id_store >=", value, "id_store");
            return this;
        }

        public Criteria andId_storeLessThan(Long value) {
            addCriterion("id_store <", value, "id_store");
            return this;
        }

        public Criteria andId_storeLessThanOrEqualTo(Long value) {
            addCriterion("id_store <=", value, "id_store");
            return this;
        }

        public Criteria andId_storeIn(List<Long> values) {
            addCriterion("id_store in", values, "id_store");
            return this;
        }

        public Criteria andId_storeNotIn(List<Long> values) {
            addCriterion("id_store not in", values, "id_store");
            return this;
        }

        public Criteria andId_storeBetween(Long value1, Long value2) {
            addCriterion("id_store between", value1, value2, "id_store");
            return this;
        }

        public Criteria andId_storeNotBetween(Long value1, Long value2) {
            addCriterion("id_store not between", value1, value2, "id_store");
            return this;
        }
    }
}