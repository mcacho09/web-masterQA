package com.retailsbs.logistikapp.retail.dto;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ActivesExample {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_actives
     *
     * @abatorgenerated Wed Nov 01 13:45:22 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table lgk_actives
     *
     * @abatorgenerated Wed Nov 01 13:45:22 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives
     *
     * @abatorgenerated Wed Nov 01 13:45:22 CST 2017
     */
    public ActivesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives
     *
     * @abatorgenerated Wed Nov 01 13:45:22 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives
     *
     * @abatorgenerated Wed Nov 01 13:45:22 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives
     *
     * @abatorgenerated Wed Nov 01 13:45:22 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives
     *
     * @abatorgenerated Wed Nov 01 13:45:22 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives
     *
     * @abatorgenerated Wed Nov 01 13:45:22 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives
     *
     * @abatorgenerated Wed Nov 01 13:45:22 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table lgk_actives
     *
     * @abatorgenerated Wed Nov 01 13:45:22 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table lgk_actives
     *
     * @abatorgenerated Wed Nov 01 13:45:22 CST 2017
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdActivesIsNull() {
            addCriterion("id_actives is null");
            return this;
        }

        public Criteria andIdActivesIsNotNull() {
            addCriterion("id_actives is not null");
            return this;
        }

        public Criteria andIdActivesEqualTo(Integer value) {
            addCriterion("id_actives =", value, "idActives");
            return this;
        }

        public Criteria andIdActivesNotEqualTo(Integer value) {
            addCriterion("id_actives <>", value, "idActives");
            return this;
        }

        public Criteria andIdActivesGreaterThan(Integer value) {
            addCriterion("id_actives >", value, "idActives");
            return this;
        }

        public Criteria andIdActivesGreaterThanOrEqualTo(Integer value) {
            addCriterion("id_actives >=", value, "idActives");
            return this;
        }

        public Criteria andIdActivesLessThan(Integer value) {
            addCriterion("id_actives <", value, "idActives");
            return this;
        }

        public Criteria andIdActivesLessThanOrEqualTo(Integer value) {
            addCriterion("id_actives <=", value, "idActives");
            return this;
        }

        public Criteria andIdActivesIn(List<Integer> values) {
            addCriterion("id_actives in", values, "idActives");
            return this;
        }

        public Criteria andIdActivesNotIn(List<Integer> values) {
            addCriterion("id_actives not in", values, "idActives");
            return this;
        }

        public Criteria andIdActivesBetween(Integer value1, Integer value2) {
            addCriterion("id_actives between", value1, value2, "idActives");
            return this;
        }

        public Criteria andIdActivesNotBetween(Integer value1, Integer value2) {
            addCriterion("id_actives not between", value1, value2, "idActives");
            return this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("created is null");
            return this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("created is not null");
            return this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("created =", value, "created");
            return this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("created <>", value, "created");
            return this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("created >", value, "created");
            return this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("created >=", value, "created");
            return this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("created <", value, "created");
            return this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("created <=", value, "created");
            return this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("created in", values, "created");
            return this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("created not in", values, "created");
            return this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("created between", value1, value2, "created");
            return this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("created not between", value1, value2, "created");
            return this;
        }

        public Criteria andModifiedIsNull() {
            addCriterion("modified is null");
            return this;
        }

        public Criteria andModifiedIsNotNull() {
            addCriterion("modified is not null");
            return this;
        }

        public Criteria andModifiedEqualTo(Date value) {
            addCriterion("modified =", value, "modified");
            return this;
        }

        public Criteria andModifiedNotEqualTo(Date value) {
            addCriterion("modified <>", value, "modified");
            return this;
        }

        public Criteria andModifiedGreaterThan(Date value) {
            addCriterion("modified >", value, "modified");
            return this;
        }

        public Criteria andModifiedGreaterThanOrEqualTo(Date value) {
            addCriterion("modified >=", value, "modified");
            return this;
        }

        public Criteria andModifiedLessThan(Date value) {
            addCriterion("modified <", value, "modified");
            return this;
        }

        public Criteria andModifiedLessThanOrEqualTo(Date value) {
            addCriterion("modified <=", value, "modified");
            return this;
        }

        public Criteria andModifiedIn(List<Date> values) {
            addCriterion("modified in", values, "modified");
            return this;
        }

        public Criteria andModifiedNotIn(List<Date> values) {
            addCriterion("modified not in", values, "modified");
            return this;
        }

        public Criteria andModifiedBetween(Date value1, Date value2) {
            addCriterion("modified between", value1, value2, "modified");
            return this;
        }

        public Criteria andModifiedNotBetween(Date value1, Date value2) {
            addCriterion("modified not between", value1, value2, "modified");
            return this;
        }

        public Criteria andLoginIsNull() {
            addCriterion("login is null");
            return this;
        }

        public Criteria andLoginIsNotNull() {
            addCriterion("login is not null");
            return this;
        }

        public Criteria andLoginEqualTo(String value) {
            addCriterion("login =", value, "login");
            return this;
        }

        public Criteria andLoginNotEqualTo(String value) {
            addCriterion("login <>", value, "login");
            return this;
        }

        public Criteria andLoginGreaterThan(String value) {
            addCriterion("login >", value, "login");
            return this;
        }

        public Criteria andLoginGreaterThanOrEqualTo(String value) {
            addCriterion("login >=", value, "login");
            return this;
        }

        public Criteria andLoginLessThan(String value) {
            addCriterion("login <", value, "login");
            return this;
        }

        public Criteria andLoginLessThanOrEqualTo(String value) {
            addCriterion("login <=", value, "login");
            return this;
        }

        public Criteria andLoginLike(String value) {
            addCriterion("login like", value, "login");
            return this;
        }

        public Criteria andLoginNotLike(String value) {
            addCriterion("login not like", value, "login");
            return this;
        }

        public Criteria andLoginIn(List<String> values) {
            addCriterion("login in", values, "login");
            return this;
        }

        public Criteria andLoginNotIn(List<String> values) {
            addCriterion("login not in", values, "login");
            return this;
        }

        public Criteria andLoginBetween(String value1, String value2) {
            addCriterion("login between", value1, value2, "login");
            return this;
        }

        public Criteria andLoginNotBetween(String value1, String value2) {
            addCriterion("login not between", value1, value2, "login");
            return this;
        }

        public Criteria andActiveIsNull() {
            addCriterion("active is null");
            return this;
        }

        public Criteria andActiveIsNotNull() {
            addCriterion("active is not null");
            return this;
        }

        public Criteria andActiveEqualTo(String value) {
            addCriterion("active =", value, "active");
            return this;
        }

        public Criteria andActiveNotEqualTo(String value) {
            addCriterion("active <>", value, "active");
            return this;
        }

        public Criteria andActiveGreaterThan(String value) {
            addCriterion("active >", value, "active");
            return this;
        }

        public Criteria andActiveGreaterThanOrEqualTo(String value) {
            addCriterion("active >=", value, "active");
            return this;
        }

        public Criteria andActiveLessThan(String value) {
            addCriterion("active <", value, "active");
            return this;
        }

        public Criteria andActiveLessThanOrEqualTo(String value) {
            addCriterion("active <=", value, "active");
            return this;
        }

        public Criteria andActiveLike(String value) {
            addCriterion("active like", value, "active");
            return this;
        }

        public Criteria andActiveNotLike(String value) {
            addCriterion("active not like", value, "active");
            return this;
        }

        public Criteria andActiveIn(List<String> values) {
            addCriterion("active in", values, "active");
            return this;
        }

        public Criteria andActiveNotIn(List<String> values) {
            addCriterion("active not in", values, "active");
            return this;
        }

        public Criteria andActiveBetween(String value1, String value2) {
            addCriterion("active between", value1, value2, "active");
            return this;
        }

        public Criteria andActiveNotBetween(String value1, String value2) {
            addCriterion("active not between", value1, value2, "active");
            return this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return this;
        }

        public Criteria andCodeEqualTo(String value) {
            addCriterion("code =", value, "code");
            return this;
        }

        public Criteria andCodeNotEqualTo(String value) {
            addCriterion("code <>", value, "code");
            return this;
        }

        public Criteria andCodeGreaterThan(String value) {
            addCriterion("code >", value, "code");
            return this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(String value) {
            addCriterion("code >=", value, "code");
            return this;
        }

        public Criteria andCodeLessThan(String value) {
            addCriterion("code <", value, "code");
            return this;
        }

        public Criteria andCodeLessThanOrEqualTo(String value) {
            addCriterion("code <=", value, "code");
            return this;
        }

        public Criteria andCodeLike(String value) {
            addCriterion("code like", value, "code");
            return this;
        }

        public Criteria andCodeNotLike(String value) {
            addCriterion("code not like", value, "code");
            return this;
        }

        public Criteria andCodeIn(List<String> values) {
            addCriterion("code in", values, "code");
            return this;
        }

        public Criteria andCodeNotIn(List<String> values) {
            addCriterion("code not in", values, "code");
            return this;
        }

        public Criteria andCodeBetween(String value1, String value2) {
            addCriterion("code between", value1, value2, "code");
            return this;
        }

        public Criteria andCodeNotBetween(String value1, String value2) {
            addCriterion("code not between", value1, value2, "code");
            return this;
        }

        public Criteria andImageIsNull() {
            addCriterion("image is null");
            return this;
        }

        public Criteria andImageIsNotNull() {
            addCriterion("image is not null");
            return this;
        }

        public Criteria andImageEqualTo(String value) {
            addCriterion("image =", value, "image");
            return this;
        }

        public Criteria andImageNotEqualTo(String value) {
            addCriterion("image <>", value, "image");
            return this;
        }

        public Criteria andImageGreaterThan(String value) {
            addCriterion("image >", value, "image");
            return this;
        }

        public Criteria andImageGreaterThanOrEqualTo(String value) {
            addCriterion("image >=", value, "image");
            return this;
        }

        public Criteria andImageLessThan(String value) {
            addCriterion("image <", value, "image");
            return this;
        }

        public Criteria andImageLessThanOrEqualTo(String value) {
            addCriterion("image <=", value, "image");
            return this;
        }

        public Criteria andImageLike(String value) {
            addCriterion("image like", value, "image");
            return this;
        }

        public Criteria andImageNotLike(String value) {
            addCriterion("image not like", value, "image");
            return this;
        }

        public Criteria andImageIn(List<String> values) {
            addCriterion("image in", values, "image");
            return this;
        }

        public Criteria andImageNotIn(List<String> values) {
            addCriterion("image not in", values, "image");
            return this;
        }

        public Criteria andImageBetween(String value1, String value2) {
            addCriterion("image between", value1, value2, "image");
            return this;
        }

        public Criteria andImageNotBetween(String value1, String value2) {
            addCriterion("image not between", value1, value2, "image");
            return this;
        }

        public Criteria andId_storeIsNull() {
            addCriterion("id_store is null");
            return this;
        }

        public Criteria andId_storeIsNotNull() {
            addCriterion("id_store is not null");
            return this;
        }

        public Criteria andId_storeEqualTo(Long value) {
            addCriterion("id_store =", value, "id_store");
            return this;
        }

        public Criteria andId_storeNotEqualTo(Long value) {
            addCriterion("id_store <>", value, "id_store");
            return this;
        }

        public Criteria andId_storeGreaterThan(Long value) {
            addCriterion("id_store >", value, "id_store");
            return this;
        }

        public Criteria andId_storeGreaterThanOrEqualTo(Long value) {
            addCriterion("id_store >=", value, "id_store");
            return this;
        }

        public Criteria andId_storeLessThan(Long value) {
            addCriterion("id_store <", value, "id_store");
            return this;
        }

        public Criteria andId_storeLessThanOrEqualTo(Long value) {
            addCriterion("id_store <=", value, "id_store");
            return this;
        }

        public Criteria andId_storeIn(List<Long> values) {
            addCriterion("id_store in", values, "id_store");
            return this;
        }

        public Criteria andId_storeNotIn(List<Long> values) {
            addCriterion("id_store not in", values, "id_store");
            return this;
        }

        public Criteria andId_storeBetween(Long value1, Long value2) {
            addCriterion("id_store between", value1, value2, "id_store");
            return this;
        }

        public Criteria andId_storeNotBetween(Long value1, Long value2) {
            addCriterion("id_store not between", value1, value2, "id_store");
            return this;
        }

        public Criteria andId_supplierIsNull() {
            addCriterion("id_supplier is null");
            return this;
        }

        public Criteria andId_supplierIsNotNull() {
            addCriterion("id_supplier is not null");
            return this;
        }

        public Criteria andId_supplierEqualTo(Long value) {
            addCriterion("id_supplier =", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierNotEqualTo(Long value) {
            addCriterion("id_supplier <>", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierGreaterThan(Long value) {
            addCriterion("id_supplier >", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierGreaterThanOrEqualTo(Long value) {
            addCriterion("id_supplier >=", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierLessThan(Long value) {
            addCriterion("id_supplier <", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierLessThanOrEqualTo(Long value) {
            addCriterion("id_supplier <=", value, "id_supplier");
            return this;
        }

        public Criteria andId_supplierIn(List<Long> values) {
            addCriterion("id_supplier in", values, "id_supplier");
            return this;
        }

        public Criteria andId_supplierNotIn(List<Long> values) {
            addCriterion("id_supplier not in", values, "id_supplier");
            return this;
        }

        public Criteria andId_supplierBetween(Long value1, Long value2) {
            addCriterion("id_supplier between", value1, value2, "id_supplier");
            return this;
        }

        public Criteria andId_supplierNotBetween(Long value1, Long value2) {
            addCriterion("id_supplier not between", value1, value2, "id_supplier");
            return this;
        }
    }
}